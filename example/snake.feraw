include("../lib/std.feraw");
cc{
    #ifdef _WIN32
    #include <windows.h>
    #define sleep(ms) Sleep(ms)
    #else
    #include <unistd.h>
    #define sleep(ms) usleep((ms)*1000)
    #endif

    void feraw_sleep(BruterList* stack)
    {
        BruterInt ms = bruter_pop_int(stack);
        sleep(ms);
    }
};

include("../lib/bsr.feraw");

// $1 = map
// $2 = x
// $3 = y
tile = macro{
    $1.data[add(mul($1.size.w, $3), $2)]
};

ls(@);

win = new_window("BSR Example", 640, 480, 0); 
canvas = get_window_canvas(win);

map = list(0);
map.size = list(0);
map.size.w = 32;
map.size.h = 24;
map.data = calloc(mul(map_size.w, map_size.h), 1);

snake = list(0);
snake.position = list(0);
snake.position.x = 16;
snake.position.y = 12;

default_sprite_size = 64;

left = 0;
right = 1;
up = 2;
down = 3;
direction = right;

argb_img = load_argb("example/periclao.argb");

img = list(0);
img.canvas = argb_to_canvas(argb_img);
img.x = 0;
img.y = 0;

free(argb_img); // Libera a memória do buffer ARGB após converter para canvas

while (wait_sync(win))
{
    fill(canvas, 0xFF005555);
    // draw_circle(canvas, 160, 120, 50, 0x7700FF00);
    // draw_line(canvas, 0, 0, 320, 240, 0xFF0000FF);
    // draw_line(canvas, 320, 0, 0, 240, 0xFF0000FF);
    // draw_rect(canvas, 10, 10, 30, 22, 0x7700FFFF);
    draw_sprite_blend(canvas, img.x, img.y, default_sprite_size, default_sprite_size, img.canvas);
    update_window(win);

    // Movement controls

    if (is_key_pressed(win, 265)) 
    {
        direction = up;
    };

    if (is_key_pressed(win, 263)) 
    {
        direction = left;
    };

    if (is_key_pressed(win, 262)) 
    {
        direction = right;
    };

    if (is_key_pressed(win, 264)) 
    {
        direction = down;
    };



    if (is_key_pressed(win, 'S')) 
    {
        img.h = add(img.h, 7);
    };

    if (is_key_pressed(win, 'W')) 
    {
        img.h = sub(img.h, 7);
    };

    if (is_key_pressed(win, 'D')) 
    {
        img.w = add(img.w, 7);
    };

    if (is_key_pressed(win, 'A')) 
    {
        img.w = sub(img.w, 7);
    };

    if (is_key_pressed(win, 'Q')) 
    {
        println("You pressed Q!");
        ?(1, end);
    };

    sleep(100);
}

end:

free_canvas(img.canvas);
free(img);