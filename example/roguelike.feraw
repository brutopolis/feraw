include("../lib/std.feraw");

fill_buffer = function{
    for (i = 0; less(i, mul(get($0, "x"), get($0, "y"))); i = add(i, 1)) 
    {
        $0["buffer"][i] = $1;
    }
};

print_map = function{
    for (i = 0; less(i, $0["y"]); i = add(i, 1))
    {
        for (j = 0; less(j, $0["x"]); j = add(j, 1)) 
        {
            print($0["buffer"][add(mul(i, $0["x"]), j)]);
        }
        print("\n");
    };
};

new_creature = function{
    c["x"] = $1;
    c["y"] = $2;
    c["hp"] = $3;
    c["name"] = $4;

    push($0, c);
    c;
};

println

start:
    map = list(0);
    map.x = 64;
    map.y = 64;
    creatures = list(0);
    c = list(0);
    player = new_creature(creatures, 4, 4, 100, "player");

    println(player["name"]);


    map["buffer"] = malloc(mul(map["x"], map["y"])); // allocate a buffer for the map
    fill_buffer(map, 1);
    print_map(map);

end:
    free(map["buffer"]); // free the map buffer
    for (i = 0; less(i, length(creatures)); i = add(i, 1)) 
    {
        free(creatures[i]); // free each creature object
    };
    free(creatures); // free the creatures array
    free(map); // free the map object
    ls(@); // list the context contents